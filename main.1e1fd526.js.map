{"version":3,"sources":["scripts/main.js"],"names":["body","document","querySelector","thead","tbody","rows","sortState","indexCompare","minLength","minAge","maxAge","valid","addEventListener","e","th","target","closest","index","cellIndex","isAscending","sortData","map","row","cell","children","value","textContent","replace","sort","a","b","compareResult","isNaN","localeCompare","innerHTML","forEach","data","appendChild","tr","querySelectorAll","classList","remove","add","form","createElement","pushNotification","title","description","type","notification","notificationTitle","notificationDescription","Object","assign","style","position","top","right","dataset","qa","append","setTimeout","validateForm","get","trim","length","test","FormData","salaryResult","Number","toLocaleString","preventDefault","newRow","insertRow","insertCell","innerText","split","join","push","reset","changeCellOnInput","firstElementChild","focus","validateCell","input","isValid","editCells","el","prev","newText","saveChanges","prevText","field","ev","key","blur"],"mappings":"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","file":"main.1e1fd526.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst body = document.querySelector('body');\nconst thead = document.querySelector('thead');\nconst tbody = document.querySelector('tbody');\nconst rows = [...tbody.rows];\nconst sortState = {};\nconst indexCompare = [];\nconst minLength = 4;\nconst minAge = 18;\nconst maxAge = 90;\n\nlet valid = true;\n\n// sort\nthead.addEventListener('click', e => {\n  const th = e.target.closest('th');\n\n  if (!th) {\n    return;\n  }\n\n  const index = th.cellIndex;\n  const formatNumber = string => string.replace(/[$,]/g, '');\n  const currentSortState = sortState[index];\n  const isAscending = currentSortState === 'asc';\n\n  const sortData = rows.map(row => {\n    const cell = row.children[index];\n    const value = formatNumber(cell.textContent);\n\n    return {\n      row, value,\n    };\n  });\n\n  sortData.sort((a, b) => {\n    const compareResult = (\n      isNaN(a.value) && isNaN(b.value)\n        ? a.value.localeCompare(b.value) : a.value - b.value\n    );\n\n    return isAscending ? compareResult : -compareResult;\n  });\n\n  sortState[index] = isAscending ? 'desc' : 'asc';\n  tbody.innerHTML = '';\n\n  sortData.forEach(data => {\n    tbody.appendChild(data.row);\n  });\n});\n\n// active\ntbody.addEventListener('click', e => {\n  const tr = e.target.closest('tr');\n\n  tbody.querySelectorAll('tr.active').forEach(row => {\n    row.classList.remove('active');\n  });\n\n  tr.classList.add('active');\n});\n\n// form\nconst form = document.createElement('form');\n\nform.classList.add('new-employee-form');\n\nform.innerHTML = `\n  <label> Name:\n    <input type=\"text\" name = \"name\" data-qa=\"name\" required>\n  </label>\n  <label> Position:\n    <input type=\"text\" name = \"position\" data-qa=\"position\">\n  </label>\n  <label> Office:\n    <select name = \"office\" data-qa=\"office\" required>\n      <option value=\"Tokyo\">Tokyo</option>\n      <option value=\"Singapore\">Singapore</option>\n      <option value=\"London\">London</option>\n      <option value=\"New York\">New York</option>\n      <option value=\"Edinburgh\">Edinburgh</option>\n      <option value=\"San Francisco\">San Francisco</option>\n    </select>\n  </label>\n  <label> Age:\n    <input type=\"number\" name = \"age\" data-qa=\"age\" required>\n  </label>\n  <label> Salary:\n    <input type=\"number\" name = \"salary\" data-qa=\"salary\" required>\n  </label>\n  <button type=\"submit\">Save to table</button>\n`;\n\nbody.append(form);\n\n// notification\nfunction pushNotification(title, description, type) {\n  const notification = document.createElement('div');\n  const notificationTitle = document.createElement('h2');\n  const notificationDescription = document.createElement('p');\n\n  Object.assign(notification.style, {\n    position: 'fixed',\n    top: '0px',\n    right: '0px',\n  });\n\n  notificationTitle.textContent = title;\n  notificationDescription.textContent = description;\n\n  notification.classList.add('notification', type);\n  notification.dataset.qa = 'notification';\n  notificationTitle.classList.add('title');\n\n  notification.append(notificationTitle, notificationDescription);\n  document.body.append(notification);\n\n  setTimeout(() => notification.remove(), 2000);\n}\n\nfunction validateForm(data) {\n  valid = true;\n\n  switch (true) {\n    case (data.get('name').trim().length < minLength\n      || /\\d/.test(data.get('name'))):\n      pushNotification(\n        'Enter a correct name!',\n        'Name must be at least 4 letters without numbers',\n        'error'\n      );\n      valid = false;\n      break;\n    case data.get('age') < minAge || data.get('age') > maxAge:\n      pushNotification(\n        'Enter a correct age!',\n        'Your age must be from 18 to 90 years',\n        'error'\n      );\n      valid = false;\n      break;\n    case data.get('position').trim().length < minLength:\n      pushNotification(\n        'Enter a correct position!',\n        'Your position must contain at least 4 letters',\n        'error'\n      );\n      valid = false;\n      break;\n    case data.get('salary') <= 0:\n      pushNotification(\n        'Enter a correct salary!',\n        'Salary must be more than 0',\n        'error'\n      );\n      valid = false;\n      break;\n  }\n}\n\n// sending data to the table\nform.addEventListener('submit', (e) => {\n  const data = new FormData(form);\n  const salaryResult = `$${Number(data.get('salary')).toLocaleString('de-DE')}`;\n\n  e.preventDefault();\n  validateForm(data);\n\n  if (!valid) {\n    return;\n  }\n\n  const newRow = tbody.insertRow();\n\n  newRow.insertCell(0).innerText = data.get('name');\n  newRow.insertCell(1).innerText = data.get('position');\n  newRow.insertCell(2).innerText = data.get('office');\n  newRow.insertCell(3).innerText = data.get('age');\n  newRow.insertCell(4).innerText = salaryResult.split('.').join(',');\n\n  rows.push(newRow);\n  form.reset();\n\n  pushNotification(\n    'Validation Success',\n    'Employee is successfully added',\n    'success');\n});\n\n// table editing\nconst changeCellOnInput = (e) => {\n  switch (e.target.cellIndex) {\n    case 0:\n    case 1:\n      e.target.innerHTML\n        = `<input type=\"text\" class=\"cell-input\">`;\n      break;\n\n    case 2:\n      e.target.innerHTML\n      = `\n    <select class=\"cell-input\">\n      <option value=\"Tokyo\">Tokyo</option>\n      <option value=\"Singapore\">Singapore</option>\n      <option value=\"London\">London</option>\n      <option value=\"New York\">New York</option>\n      <option value=\"Edinburgh\">Edinburgh</option>\n      <option value=\"San Francisco\">San Francisco</option>\n    </select>\n      `;\n      break;\n\n    case 3:\n    case 4:\n      e.target.innerHTML\n      = `<input type=\"number\" class=\"cell-input\">`;\n      break;\n  }\n\n  e.target.firstElementChild.focus();\n};\n\n// valid cell\nconst validateCell = (e) => {\n  const input = document.querySelector('.cell-input');\n  const isValid = () => {\n    e.target.firstElementChild.focus();\n    valid = true;\n  };\n\n  valid = false;\n\n  if (!input.value.length) {\n    return valid;\n  }\n\n  switch (e.target.cellIndex) {\n    case 0:\n      if (input.value.length < minLength) {\n        isValid();\n\n        pushNotification(\n          'Name is not correct',\n          'Name must be at least 4 letters without numbers',\n          'error'\n        );\n      }\n      break;\n    case 1:\n      if (input.value.length < minLength) {\n        isValid();\n\n        pushNotification(\n          'Enter a correct position!',\n          'Your position must contain at least 4 letters',\n          'error'\n        );\n      }\n      break;\n    case 3:\n      if (input.value < minAge || input.value > maxAge) {\n        isValid();\n\n        pushNotification(\n          'Age is not correct',\n          'Your age must be from 18 to 90 years',\n          'error'\n        );\n      }\n      break;\n    default:\n      return valid;\n  }\n};\n\nconst editCells = (el, prev) => {\n  const newText = el.target.firstElementChild.value;\n\n  if (newText === '' || newText === '0') {\n    el.target.innerHTML = prev;\n  } else {\n    el.target.cellIndex !== 4\n      ? el.target.innerHTML = newText\n      : el.target.innerHTML = `\n        $${Number(newText).toLocaleString('de-DE').split('.').join(',')}\n      `;\n\n    if (el.target.cellIndex !== 2) {\n      pushNotification(\n        'Validation Success',\n        'Employee is successfully edited',\n        'success');\n    }\n  }\n};\n\nconst saveChanges = (e, prev) => {\n  validateCell(e);\n\n  if (!valid) {\n    indexCompare.length = 0;\n\n    return editCells(e, prev);\n  }\n};\n\n// dblclick\ntbody.addEventListener('dblclick', (e) => {\n  const tableCells = e.target.closest('td');\n\n  if (!tableCells) {\n    return;\n  }\n\n  const prevText = e.target.innerText;\n\n  changeCellOnInput(e, prevText);\n\n  const field = e.target.firstElementChild;\n\n  field.addEventListener('blur', () => {\n    saveChanges(e, prevText);\n  });\n\n  field.addEventListener('keyup', (ev) => {\n    if (ev.key === 'Enter') {\n      field.blur();\n    }\n  });\n});\n"]}